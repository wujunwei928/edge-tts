name: edge-tts-go Build Release By Version Tag

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '0.*' # Push events to matching 0.*, i.e. 0.1.0, 0.1.1

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build And Release
    runs-on: ubuntu-latest
    steps:
      - name: Get git repo name
        id: get_repo_name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_OUTPUT

      - name: Get git tag version
        id: get_tag_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Checkout Github Code
        uses: actions/checkout@v3

      - name: Set Up Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Build CLI Binary
        run: |
          for goOs in linux windows darwin;\
          do echo "Building ${goOs} amd64 binary...";\
          outputFile="${{ steps.get_repo_name.outputs.REPO_NAME }}";\
          if [[ ${goOs} =~ 'windows' ]];\
          then outputFile="${{ steps.get_repo_name.outputs.REPO_NAME }}.exe";\
          fi;\
          goArch=amd64
          GOOS=$goOs GOARCH=$goArch go build -o $outputFile;\
          tar -zcvf ${{ steps.get_repo_name.outputs.REPO_NAME }}-${{ steps.get_tag_version.outputs.VERSION }}-${goOs}-${goArch}.tar.gz ${outputFile};\
          rm ${outputFile};\
          done

      - name: Create Github Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "${{ steps.get_repo_name.outputs.REPO_NAME }} Release ${{ steps.get_tag_version.outputs.VERSION }}"
          tag_name:     ${{ github.ref }}
          draft:        false
          prerelease:   false

      - name: Upload Release Asset
        id:   upload-release-asset
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["*.tar.gz"]'
